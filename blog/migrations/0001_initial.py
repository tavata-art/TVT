# Generated by Django 5.2.3 on 2025-06-19 15:07

import django.db.models.deletion
import django.utils.timezone
import mptt.fields
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('categories', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=250, verbose_name='Title')),
                ('title_es', models.CharField(max_length=250, null=True, verbose_name='Title')),
                ('title_en', models.CharField(max_length=250, null=True, verbose_name='Title')),
                ('title_ca', models.CharField(max_length=250, null=True, verbose_name='Title')),
                ('slug', models.SlugField(max_length=250, unique_for_date='published_date', verbose_name='Slug')),
                ('slug_es', models.SlugField(max_length=250, null=True, unique_for_date='published_date', verbose_name='Slug')),
                ('slug_en', models.SlugField(max_length=250, null=True, unique_for_date='published_date', verbose_name='Slug')),
                ('slug_ca', models.SlugField(max_length=250, null=True, unique_for_date='published_date', verbose_name='Slug')),
                ('content', models.TextField(verbose_name='Content')),
                ('content_es', models.TextField(null=True, verbose_name='Content')),
                ('content_en', models.TextField(null=True, verbose_name='Content')),
                ('content_ca', models.TextField(null=True, verbose_name='Content')),
                ('featured_image', models.ImageField(blank=True, null=True, upload_to='blog/featured/%Y/%m/%d/', verbose_name='Featured Image')),
                ('published_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Published Date')),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('published', 'Published')], default='draft', max_length=10, verbose_name='Status')),
                ('meta_title', models.CharField(blank=True, max_length=70, null=True, verbose_name='Meta Title (SEO)')),
                ('meta_title_es', models.CharField(blank=True, max_length=70, null=True, verbose_name='Meta Title (SEO)')),
                ('meta_title_en', models.CharField(blank=True, max_length=70, null=True, verbose_name='Meta Title (SEO)')),
                ('meta_title_ca', models.CharField(blank=True, max_length=70, null=True, verbose_name='Meta Title (SEO)')),
                ('meta_description', models.CharField(blank=True, max_length=160, null=True, verbose_name='Meta Description (SEO)')),
                ('meta_description_es', models.CharField(blank=True, max_length=160, null=True, verbose_name='Meta Description (SEO)')),
                ('meta_description_en', models.CharField(blank=True, max_length=160, null=True, verbose_name='Meta Description (SEO)')),
                ('meta_description_ca', models.CharField(blank=True, max_length=160, null=True, verbose_name='Meta Description (SEO)')),
                ('views_count', models.PositiveIntegerField(default=0, verbose_name='View Count')),
                ('editor_rating', models.PositiveIntegerField(default=0, help_text='A score from 0-100 to feature this post. Higher numbers appear first.', verbose_name="Editor's Rating")),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blog_posts', to=settings.AUTH_USER_MODEL, verbose_name='Author')),
                ('categories', models.ManyToManyField(blank=True, related_name='blog_posts', to='categories.category', verbose_name='Categories')),
            ],
            options={
                'verbose_name': 'blog post',
                'verbose_name_plural': 'blog posts',
                'ordering': ('-published_date',),
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('author_name', models.CharField(blank=True, max_length=100, verbose_name='Author Name')),
                ('author_email', models.EmailField(blank=True, max_length=254, verbose_name='Author Email')),
                ('content', models.TextField(verbose_name='Content')),
                ('content_es', models.TextField(null=True, verbose_name='Content')),
                ('content_en', models.TextField(null=True, verbose_name='Content')),
                ('content_ca', models.TextField(null=True, verbose_name='Content')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('is_approved', models.BooleanField(default=False, verbose_name='Is Approved?')),
                ('lft', models.PositiveIntegerField(editable=False)),
                ('rght', models.PositiveIntegerField(editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(editable=False)),
                ('parent', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='blog.comment', verbose_name='Parent Comment')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='comments_made', to=settings.AUTH_USER_MODEL, verbose_name='User')),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='blog.post', verbose_name='Post')),
            ],
            options={
                'verbose_name': 'comment',
                'verbose_name_plural': 'comments',
            },
        ),
    ]
