# Generated by Django 5.2.3 on 2025-06-19 15:07

import django.db.models.deletion
import mptt.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Name')),
                ('name_es', models.CharField(max_length=100, null=True, verbose_name='Name')),
                ('name_en', models.CharField(max_length=100, null=True, verbose_name='Name')),
                ('name_ca', models.CharField(max_length=100, null=True, verbose_name='Name')),
                ('slug', models.SlugField(max_length=100, unique=True, verbose_name='Slug')),
                ('slug_es', models.SlugField(max_length=100, null=True, unique=True, verbose_name='Slug')),
                ('slug_en', models.SlugField(max_length=100, null=True, unique=True, verbose_name='Slug')),
                ('slug_ca', models.SlugField(max_length=100, null=True, unique=True, verbose_name='Slug')),
                ('description', models.TextField(blank=True, help_text='An optional description for the category, can be shown on category pages.', verbose_name='Description')),
                ('description_es', models.TextField(blank=True, help_text='An optional description for the category, can be shown on category pages.', null=True, verbose_name='Description')),
                ('description_en', models.TextField(blank=True, help_text='An optional description for the category, can be shown on category pages.', null=True, verbose_name='Description')),
                ('description_ca', models.TextField(blank=True, help_text='An optional description for the category, can be shown on category pages.', null=True, verbose_name='Description')),
                ('meta_title', models.CharField(blank=True, help_text='A precise title for search engine results (max 70 chars).', max_length=70, verbose_name='Meta Title (SEO)')),
                ('meta_title_es', models.CharField(blank=True, help_text='A precise title for search engine results (max 70 chars).', max_length=70, null=True, verbose_name='Meta Title (SEO)')),
                ('meta_title_en', models.CharField(blank=True, help_text='A precise title for search engine results (max 70 chars).', max_length=70, null=True, verbose_name='Meta Title (SEO)')),
                ('meta_title_ca', models.CharField(blank=True, help_text='A precise title for search engine results (max 70 chars).', max_length=70, null=True, verbose_name='Meta Title (SEO)')),
                ('meta_description', models.CharField(blank=True, help_text='A short description for search engine previews (max 160 chars).', max_length=160, verbose_name='Meta Description (SEO)')),
                ('meta_description_es', models.CharField(blank=True, help_text='A short description for search engine previews (max 160 chars).', max_length=160, null=True, verbose_name='Meta Description (SEO)')),
                ('meta_description_en', models.CharField(blank=True, help_text='A short description for search engine previews (max 160 chars).', max_length=160, null=True, verbose_name='Meta Description (SEO)')),
                ('meta_description_ca', models.CharField(blank=True, help_text='A short description for search engine previews (max 160 chars).', max_length=160, null=True, verbose_name='Meta Description (SEO)')),
                ('lft', models.PositiveIntegerField(editable=False)),
                ('rght', models.PositiveIntegerField(editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(editable=False)),
                ('parent', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='categories.category', verbose_name='Parent Category')),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categories',
            },
        ),
    ]
