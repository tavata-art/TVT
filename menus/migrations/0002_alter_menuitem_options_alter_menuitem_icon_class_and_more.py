# Generated by Django 5.2.3 on 2025-06-21 16:07

import django.db.models.deletion
import mptt.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('menus', '0001_initial'),
        ('pages', '0002_page_featured_image'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='menuitem',
            options={'ordering': ['order'], 'verbose_name': 'Menu Item', 'verbose_name_plural': 'Menu Items'},
        ),
        migrations.AlterField(
            model_name='menuitem',
            name='icon_class',
            field=models.CharField(blank=True, help_text="FontAwesome class (e.g., 'fas fa-home') to display an icon next to the link.", max_length=100, verbose_name='Icon Class'),
        ),
        migrations.AlterField(
            model_name='menuitem',
            name='link_page',
            field=models.ForeignKey(blank=True, help_text="Link to a specific internal page. Only used if Link Type is 'Single Page'.", null=True, on_delete=django.db.models.deletion.SET_NULL, to='pages.page', verbose_name='Page Link'),
        ),
        migrations.AlterField(
            model_name='menuitem',
            name='link_type',
            field=models.CharField(choices=[('url', 'Manual URL'), ('page', 'Single Page'), ('all_blog_categories', 'Blog Categories Tree (Dropdown)'), ('important_pages', 'Important Pages List (Dropdown)')], default='url', help_text='Determines how this menu item behaves: a direct link, or a dynamic content generator.', max_length=50, verbose_name='Link Type'),
        ),
        migrations.AlterField(
            model_name='menuitem',
            name='link_url',
            field=models.CharField(blank=True, help_text="Use for external URLs (e.g., 'https://google.com') or custom internal paths (e.g., '/blog/'). Only used if Link Type is 'Manual URL'.", max_length=255, verbose_name='Manual URL'),
        ),
        migrations.AlterField(
            model_name='menuitem',
            name='parent',
            field=mptt.fields.TreeForeignKey(blank=True, help_text='Select a parent item to nest this menu item within it.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='menus.menuitem', verbose_name='Parent Menu Item'),
        ),
    ]
