# Generated by Django 5.2.3 on 2025-06-19 15:07

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='SiteConfiguration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('blog_items_per_page', models.PositiveIntegerField(default=9, help_text='Number of posts to show on the main blog page and on category pages.', verbose_name='Items per Page in Blog/Category lists')),
                ('search_pages_per_page', models.PositiveIntegerField(default=5, verbose_name='Pages per Page in Search Results')),
                ('search_posts_per_page', models.PositiveIntegerField(default=5, verbose_name='Posts per Page in Search Results')),
                ('search_results_per_page', models.PositiveIntegerField(default=5, help_text='Number of items to show per section (Pages/Posts) on the search results page.', verbose_name='Results per Page in Search')),
                ('search_importance_limit', models.PositiveIntegerField(default=3, help_text='How many top-priority pages to display before regular search results.', verbose_name="Number of 'Important' Pages to show first in search")),
                ('comment_indentation_pixels', models.PositiveIntegerField(default=20, help_text='Controls the visual indentation for nested comments in the admin.', verbose_name='Comment Indentation (in pixels)')),
                ('auto_approve_comments', models.BooleanField(default=False, help_text='If checked, new comments will be published immediately without moderation.', verbose_name='Auto-approve comments')),
                ('menu_cache_timeout', models.PositiveIntegerField(default=3600, help_text='How long the site menus should be stored in cache. Set to 0 to disable menu caching (not recommended).', verbose_name='Menu Cache Timeout (in seconds)')),
                ('site_logo', models.ImageField(blank=True, help_text='The main logo displayed in the top bar.', null=True, upload_to='site_branding/', verbose_name='Site Logo')),
                ('site_slogan', models.CharField(blank=True, help_text='A short tagline displayed next to the logo.', max_length=150, verbose_name='Site Slogan')),
                ('site_slogan_es', models.CharField(blank=True, help_text='A short tagline displayed next to the logo.', max_length=150, null=True, verbose_name='Site Slogan')),
                ('site_slogan_en', models.CharField(blank=True, help_text='A short tagline displayed next to the logo.', max_length=150, null=True, verbose_name='Site Slogan')),
                ('site_slogan_ca', models.CharField(blank=True, help_text='A short tagline displayed next to the logo.', max_length=150, null=True, verbose_name='Site Slogan')),
                ('trusted_commenter_threshold', models.PositiveIntegerField(default=10, help_text='The number of approved comments a user needs to post before their future comments are auto-approved.', verbose_name='Trusted Commenter Threshold')),
                ('top_bar_banner_image', models.ImageField(blank=True, help_text='An optional banner image displayed in the top bar.', null=True, upload_to='site_branding/banners/', verbose_name='Top Bar Banner Image')),
                ('top_bar_banner_link', models.URLField(blank=True, help_text='The URL the banner image will link to.', max_length=255, verbose_name='Top Bar Banner Link')),
            ],
            options={
                'verbose_name': 'Site Configuration',
                'verbose_name_plural': 'Site Configuration',
            },
        ),
    ]
